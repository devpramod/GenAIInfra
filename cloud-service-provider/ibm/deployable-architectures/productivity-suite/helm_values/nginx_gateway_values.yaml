# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# Gateway mode values for nginx chart in productivity suite
# This file enables nginx to act as a central gateway/router
# Adapted from helm-charts/nginx-central-gateway for common nginx chart

# Enable gateway mode
gatewayMode:
  enabled: true

# Override service type for gateway mode (will be overridden by terraform)
service:
  type: NodePort
  port: 80

# Define the services to route to
services:
  chatqna:
    host: "chatqna.chatqna.svc.cluster.local"
    port: "8888"
  codegen:
    host: "codegen.codegen.svc.cluster.local"
    port: "7778"
  docsum:
    host: "docsum.docsum.svc.cluster.local"
    port: "8888"
  dataprep:
    host: "chatqna-data-prep.chatqna.svc.cluster.local"
    port: "6007"
  chathistory:
    host: "chathistory-usvc.chathistory.svc.cluster.local"
    port: "6012"
  prompt:
    host: "prompt-usvc.prompt.svc.cluster.local"
    port: "6018"
  keycloak:
      host: "keycloak.keycloak.svc.cluster.local"
      port: "8080"

# UI service configuration
ui:
  host: "ui.ui.svc.cluster.local"
  port: "5173"

# Custom container startup for gateway mode
customCommand:
  enabled: true
  command: ["/bin/sh", "-c"]
  args:
    - |
      envsubst '${FRONTEND_SERVICE_IP} ${FRONTEND_SERVICE_PORT} ${CHATQNA_SERVICE_IP} ${CHATQNA_SERVICE_PORT} ${CODEGEN_SERVICE_IP} ${CODEGEN_SERVICE_PORT} ${DOCSUM_SERVICE_IP} ${DOCSUM_SERVICE_PORT} ${DATAPREP_SERVICE_IP} ${DATAPREP_SERVICE_PORT} ${CHATHISTORY_SERVICE_IP} ${CHATHISTORY_SERVICE_PORT} ${PROMPT_SERVICE_IP} ${PROMPT_SERVICE_PORT}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf &&
      nginx -g 'daemon off;'

# Custom nginx configuration template
nginxConfig:
  enabled: true
  template: |
    # Default server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Server name and root settings
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Default headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Timeouts
        client_max_body_size 10G;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Root path goes to UI
        location / {
            proxy_pass http://${FRONTEND_SERVICE_IP}:${FRONTEND_SERVICE_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /v1/health_check {
            return 200 'healthy\n';
            add_header Content-Type text/plain;
        }

        # ChatQnA service
        location /v1/chatqna {
            proxy_pass http://${CHATQNA_SERVICE_IP}:${CHATQNA_SERVICE_PORT}/v1/chatqna;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # CodeGen service
        location /v1/codegen {
            proxy_pass http://${CODEGEN_SERVICE_IP}:${CODEGEN_SERVICE_PORT}/v1/codegen;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # DocSum service
        location /v1/docsum {
            proxy_pass http://${DOCSUM_SERVICE_IP}:${DOCSUM_SERVICE_PORT}/v1/docsum;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # DataPrep service
        location /v1/dataprep {
            proxy_pass http://${DATAPREP_SERVICE_IP}:${DATAPREP_SERVICE_PORT}/v1/dataprep;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 6000;
            proxy_send_timeout 6000;
            proxy_read_timeout 6000;
            send_timeout 6000;
        }

        # Chathistory service
        location /v1/chathistory {
            proxy_pass http://${CHATHISTORY_SERVICE_IP}:${CHATHISTORY_SERVICE_PORT}/v1/chathistory;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Prompt service
        location /v1/prompt {
            proxy_pass http://${PROMPT_SERVICE_IP}:${PROMPT_SERVICE_PORT}/v1/prompt;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Keycloak service - single entry point for all auth-related requests
        location /auth {
            proxy_pass http://keycloak.keycloak.svc.cluster.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Error pages
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

# Ingress configuration for gateway mode
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Health check probes for gateway mode
readinessProbe:
  httpGet:
    path: /v1/health_check
    port: nginx
  initialDelaySeconds: 5
  periodSeconds: 5

startupProbe:
  httpGet:
    path: /v1/health_check
    port: nginx
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 120

# Override security context for gateway mode (simplified)
securityContext: {}
  # readOnlyRootFilesystem: true
  # allowPrivilegeEscalation: false
  # runAsNonRoot: true
  # runAsUser: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # seccompProfile:
  #   type: RuntimeDefault
